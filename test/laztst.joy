DEFINE
swoncat == swap concat ;
prime == 2 [ over over dup * > 2 pick 2 pick rem 0 > and ] [ succ ] while dup *
< ;
fib == [ 1 0 ] dip [ swap [ over + ] unary ] times popd ;
Uncons == uncons first i ;
Third == Rest Rest First ;
Take == [ dup Null ] [ pop pop [ ] ] [ [ Uncons ] dip pred ] [ cons ] linrec ;
Second == Rest First ;
Rest == rest first i ;
Powers-of-2 == 1 [ 2 * ] From-by ;
Ones == 1 [ ] From-by ;
Null == null ;
Naturals == 0 From ;
N-th == pred Drop First ;
Map == [ over Null ] [ [ ] ] [ [ Uncons ] dip dup swapd [ Map ] cons cons [ i ]
dip Cons ] ifte ;
From-to-by == [ dup [ From-to-by ] cons swapd cons [ dupd i ] dip cons Cons ]
[ [ 2 pick 2 pick > ] [ pop pop pop ] ] dip ifte ;
From-to == [ over over > ] [ pop pop [ ] ] [ [ dup succ ] dip [ From-to ] cons
cons Cons ] ifte ;
From-by == dupd dup [ i ] dip [ From-by ] cons cons Cons ;
From == dup succ [ From ] cons Cons ;
First == first ;
Filter == [ over Null ] [ [ ] ] [ dup [ [ i not ] cons [ dup first ] swoncat [
Rest ] while Uncons ] dip [ Filter ] cons cons Cons ] ifte ;
Evens == 0 [ 2 + ] From-by ;
Drop == [ Rest ] times ;
Cons == [ ] cons cons ;
END

"\nTesting lazy lists in the library lazlib.joy\n" putchars .
0 __settracegc .
2 setecho .
Naturals .
Evens .
Powers-of-2 .
Naturals .
Naturals Rest .
Naturals Rest Rest .
Naturals 2 Drop .
Naturals 3 Drop .
Ones .
Ones Rest .
Ones 10 Drop .
Evens First .
Evens Second .
Evens Third .
Evens 3 N-th .
Evens 4 N-th .
Evens 10 Take .
Powers-of-2 5 N-th .
Powers-of-2 10 N-th .
Powers-of-2 20 N-th .
Powers-of-2 20 Drop .
Powers-of-2 21 N-th .
Powers-of-2 10 Take .
Powers-of-2 5 Drop 5 Take .
Ones 5 Take .
Ones 5 Drop 5 Take .
1 [ 1.1 * ] From-by .
1 [ 1.1 * ] From-by Rest .
1 [ 1.1 * ] From-by Third .
1 [ 1.1 * ] From-by 10 Drop .
1 [ 1.1 * ] From-by 10 N-th .
1 [ 1.1 * ] From-by 10 Take .
true [ not ] From-by .
true [ not ] From-by Third .
true [ not ] From-by 3 Drop .
true [ not ] From-by 10 Take .
"" [ 'a swons ] From-by 7 Take .
[ ] [ [ ] cons ] From-by 7 Take .
'0 '9 From-to .
'0 '9 From-to Third .
'0 '9 From-to 9 Drop .
'0 '9 From-to 9 Drop Null .
'0 '9 From-to 10 Drop .
'0 '9 From-to 10 Drop Null .
'0 '9 From-to 5 Take .
'0 '9 From-to 10 Take .
10 50 [ 3 + ] From-to-by .
10 50 [ 3 + ] From-to-by Third .
Naturals [ dup * ] Map 10 Take .
Naturals [ prime ] Filter 10 Take .
Naturals [ fib ] Map [ 3 rem null ] Filter 10 Take .
Naturals [ prime ] Filter [ dup * ] Map 10 Take .
1000001 From .
1000001 From [ prime ] Filter .
1000001 From [ prime ] Filter Third .
1000001 From [ prime ] Filter 50 Take .
