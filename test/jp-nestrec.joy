DEFINE 
y-ack == [ [ [ [ 2 pick null ] pop popd succ ] [ [ over null ] [ pop pred 1 ]
	 dip i ] [ [ [ dup pred swap ] dip pred ] dip twice-i ] ] cond ] y ;
y == [ dup cons ] swoncat dup cons i ;
x-mcc91 == [ [ over 100 > ] [ pop 10 - ] [ [ 11 + ] dip twice-x ] ifte ] x ;
x-hamilhyp == [ [ over null ] [ pop pop ] [ dup [ [ dup rollup pred ] dip x ]
dip [ dupd cons ] dip [ swap pred ] dip x ] ifte ] x ;
x-fact == [ [ over null ] [ pop pop 1 ] [ [ dup pred ] dip x * ] ifte ] x ;
x-ack == [ [ [ [ 2 pick null ] pop popd succ ] [ [ over null ] [ pop pred 1 ]
dip x ] [ [ [ dup pred swap ] dip pred ] dip twice-x ] ] cond ] x ;
twice-x == dup [ x ] dip x ;
twice-i == dup [ i ] dip i ;
toggle == [ over over has ] [ [ not ] dip swons not ] [ swons ] ifte ;
swoncat == swap concat ;
r-mcc91 == [ dup 100 > ] [ 10 - ] [ 11 + r-mcc91 r-mcc91 ] ifte ;
r-hamilhyp == [ dup null ] [ pop ] [ dup rollup pred r-hamilhyp dupd cons swap
pred r-hamilhyp ] ifte ;
r-fact == [ dup null ] [ pop 1 ] [ dup pred r-fact * ] ifte ;
r-ack == [ [ [ over null ] popd succ ] [ [ dup null ] pop pred 1 r-ack ] [ [
dup pred swap ] dip pred r-ack r-ack ] ] cond ;
putln == put newline ;
newline == '\n putch ;
lr-hamilhyp == [ dup null ] [ pop ] [ dup rollup pred ] [ dupd cons swap pred
lr-hamilhyp ] linrec ;
lr-grayseq == [ dup null ] [ pop ] [ dup rollup pred ] [ dupd dup [ first swap
toggle ] dip cons swap pred lr-grayseq ] linrec ;
l-mcc91 == [ dup 100 > ] [ 10 - ] [ 11 + ] [ l-mcc91 ] linrec ;
dup2 == dupd dup swapd ;
cnr-mcc91 == [ [ [ dup 100 > ] [ 10 - ] ] [ [ 11 + ] [ ] [ ] ] ] condnestrec ;
cnr-hanoi == [ [ rolldown ] infra ] dip [ [ [ dup null ] [ pop pop ] ] [ [ dup2
[ [ rotate ] infra ] dip pred ] [ [ dup rest put ] dip [ [ swap ] infra ] dip
pred ] [ ] ] ] condnestrec ;
cnr-hamilhyp == [ [ [ dup null ] [ pop ] ] [ [ dup rollup pred ] [ dupd cons
swap pred ] [ ] ] ] condnestrec ;
cnr-grayseq == [ [ [ dup null ] [ pop ] ] [ [ dup rollup pred ] [ dupd dup [
first swap toggle ] dip cons swap pred ] [ ] ] ] condnestrec ;
cnr-fact == [ [ [ dup null ] [ pop 1 ] ] [ [ dup pred ] [ * ] ] ] condnestrec ;
cnr-even == [ [ [ dup 2 rem null ] [ pop true ] ] [ [ pop false ] ] ]
condnestrec ;
cnr-ack == [ [ [ over null ] [ popd succ ] ] [ [ dup null ] [ pop pred 1 ] [ ]
] [ [ [ dup pred swap ] dip pred ] [ ] [ ] ] ] condnestrec ;
cnr-abs == [ [ [ dup 0 < ] [ 0 swap - ] ] [ [ ] ] ] condnestrec ;
clr-ack == [ [ [ over null ] [ popd succ ] ] [ [ dup null ] [ pop pred 1 ] [ ]
] [ [ [ dup pred swap ] dip pred ] [ clr-ack ] ] ] condlinrec ;
ack == [ [ [ dup 0 = ] [ pop 1 + ] ] [ [ over 0 = ] [ popd 1 - 1 swap ] [ ] ] [
[ dup rollup [ 1 - ] dip ] [ swap 1 - ack ] ] ] condlinrec ;
END

2 setecho .
0 __settracegc .
[ 0 1 2 3 4 5 6 ] [ r-fact ] map .
[ -7 42 99 100 101 102 345 ] [ r-mcc91 ] map .
[ [ 0 0 ] [ 0 1 ] [ 0 2 ] [ 0 3 ] [ 0 4 ] [ 0 5 ] ] [ i r-ack ] map putln
[ [ 1 0 ] [ 1 1 ] [ 1 2 ] [ 1 3 ] [ 1 4 ] [ 1 5 ] ] [ i r-ack ] map putln
[ [ 2 0 ] [ 2 1 ] [ 2 2 ] [ 2 3 ] [ 2 4 ] [ 2 5 ] ] [ i r-ack ] map putln
[ [ 3 0 ] [ 3 1 ] [ 3 2 ] [ 3 3 ] [ 3 4 ] [ 3 5 ] ] [ i r-ack ] map putln
[ [ 4 0 ] ] [ i r-ack ] map .
[ ] 3 r-hamilhyp .
[ ] 4 r-hamilhyp .
[ ] 5 r-hamilhyp .
[ 0 1 2 3 4 5 6 ] [ x-fact ] map .
[ -7 42 99 100 101 102 345 ] [ x-mcc91 ] map .
[ [ 3 0 ] [ 3 1 ] [ 3 2 ] [ 3 3 ] [ 3 4 ] [ 3 5 ] ] [ i x-ack ] map .
[ [ 3 0 ] [ 3 1 ] [ 3 2 ] [ 3 3 ] [ 3 4 ] [ 3 5 ] ] [ i y-ack ] map .
[ ] 5 x-hamilhyp .
[ [ 0 0 ] [ 0 1 ] [ 0 2 ] [ 0 3 ] [ 0 4 ] [ 0 5 ] ] [ i swap ack ] map putln
[ [ 1 0 ] [ 1 1 ] [ 1 2 ] [ 1 3 ] [ 1 4 ] [ 1 5 ] ] [ i swap ack ] map putln
[ [ 2 0 ] [ 2 1 ] [ 2 2 ] [ 2 3 ] [ 2 4 ] [ 2 5 ] ] [ i swap ack ] map putln
[ [ 3 0 ] [ 3 1 ] [ 3 2 ] [ 3 3 ] [ 3 4 ] [ 3 5 ] ] [ i swap ack ] map putln
[ [ 4 0 ] ] [ i swap ack ] map .
[ -7 42 99 100 101 102 345 ] [ l-mcc91 ] map .
[ [ 3 0 ] [ 3 1 ] [ 3 2 ] [ 3 3 ] [ 3 4 ] [ 3 5 ] ] [ i clr-ack ] map .
[ ] 5 lr-hamilhyp .
{ } 4 toggle .
{ 1 2 7 } 2 toggle .
[ { } ] 3 lr-grayseq .
[ { 3 } ] 3 lr-grayseq .
[ { 1 2 3 } ] 3 lr-grayseq .
[ ] 4 cnr-hamilhyp .
3 4 cnr-ack .
[ { } ] 3 cnr-grayseq .
[ source destination temp ] 2 cnr-hanoi .
[ S D T ] 5 cnr-hanoi newline .
[ 0 1 2 3 4 5 6 ] [ cnr-fact ] map .
[ -7 42 99 100 101 102 345 ] [ cnr-mcc91 ] map .
3 cnr-even .
4 cnr-even .
-5 cnr-abs .
6 cnr-abs .
