#
#   module  : CMakeLists.txt
#   version : 1.4
#   date    : 07/04/22
#

#
#	Test normal version
#
if(REAL_BDW)
macro(exe8 src)
add_custom_command(OUTPUT ${src}.c
		   DEPENDS joy ${CMAKE_SOURCE_DIR}/test2/${src}.joy
		   COMMAND joy -c ${CMAKE_SOURCE_DIR}/test2/${src}.joy >${src}.c)
add_executable(${src} ${CMAKE_SOURCE_DIR}/main.c ${src}.c
		      ${CMAKE_SOURCE_DIR}/initsym.c
		      ${CMAKE_SOURCE_DIR}/node.c
		      ${CMAKE_SOURCE_DIR}/utils.c
		      ${CMAKE_SOURCE_DIR}/yylex.c # ${FLEX_MyScanner_OUTPUTS}
#		      ${CMAKE_SOURCE_DIR}/scan.c
		      ${CMAKE_SOURCE_DIR}/joy.c
		      ${CMAKE_SOURCE_DIR}/print.c
		      ${CMAKE_SOURCE_DIR}/runtime.c)
target_link_libraries(${src} gc-lib m)
endmacro(exe8)
else()
macro(exe8 src)
add_custom_command(OUTPUT ${src}.c
		   DEPENDS joy ${CMAKE_SOURCE_DIR}/test2/${src}.joy
		   COMMAND joy -c ${CMAKE_SOURCE_DIR}/test2/${src}.joy >${src}.c)
add_executable(${src} ${CMAKE_SOURCE_DIR}/main.c ${src}.c
		      ${CMAKE_SOURCE_DIR}/initsym.c
		      ${CMAKE_SOURCE_DIR}/node.c
		      ${CMAKE_SOURCE_DIR}/utils.c
		      ${CMAKE_SOURCE_DIR}/yylex.c # ${FLEX_MyScanner_OUTPUTS}
#		      ${CMAKE_SOURCE_DIR}/scan.c
		      ${CMAKE_SOURCE_DIR}/joy.c
		      ${CMAKE_SOURCE_DIR}/print.c
		      ${CMAKE_SOURCE_DIR}/runtime.c
		      ${CMAKE_SOURCE_DIR}/gc.c)
target_link_libraries(${src} m)
endmacro(exe8)
endif()

#
#	Test interpreter
#
macro(exe9 src)
add_custom_target(${src}.out ALL
		  DEPENDS joy ${CMAKE_SOURCE_DIR}/test2/${src}.joy
		  COMMAND joy ${CMAKE_SOURCE_DIR}/test2/${src}.joy >${src}.out)
endmacro(exe9)

exe9(abort)
exe9(abs)
exe9(acos)
exe9(add)
exe9(all)
exe9(and)
exe9(app11)
exe9(app12)
exe9(app1)
exe9(app2)
exe9(app3)
exe9(app4)
exe9(argc)
exe9(argv)
exe9(asin)
exe9(atan2)
exe9(atan)
exe9(at)
exe9(autoput)
exe9(binary)
exe9(binrec)
exe9(body)
exe9(branch)
exe9(case)
exe9(casting)
exe9(ceil)
exe9(char)
exe9(choice)
exe9(chr)
exe9(cleave)
exe9(clock)
exe9(compare)
exe9(concat)
exe9(cond)
exe9(condlinrec)
exe9(condnestrec)
exe9(cons)
exe9(construct)
exe9(conts)
exe9(cosh)
exe9(cos)
exe9(dip)
exe9(divide)
exe9(div)
exe9(drop)
exe9(__dump)
exe9(dupd)
exe9(dup)
exe9(echo)
exe9(enconcat)
exe9(eql)
exe9(equal)
exe9(exp)
exe9(false)
exe9(fclose)
exe9(feof)
exe9(ferror)
exe9(fflush)
exe9(fgetch)
exe9(fget)
exe9(fgets)
exe9(file)
exe9(filetime)
exe9(filter)
exe9(first)
exe9(float)
exe9(floor)
exe9(fold)
exe9(fopen)
exe9(formatf)
exe9(format)
exe9(fputchars)
exe9(fputch)
exe9(fput)
exe9(fputstring)
exe9(fread)
exe9(fremove)
exe9(frename)
exe9(frexp)
exe9(fseek)
exe9(ftell)
exe9(fwrite)
exe9(gc)
exe9(genrec)
exe9(geql)
exe9(getch)
exe9(getenv)
exe9(get)
exe9(gmtime)
exe9(greater)
exe9(has)
exe9(helpdetail)
exe9(id)
exe9(ifchar)
exe9(iffile)
exe9(iffloat)
exe9(ifinteger)
exe9(iflist)
exe9(iflogical)
exe9(ifset)
exe9(ifstring)
exe9(ifte)
exe9(i)
exe9(include)
exe9(index)
exe9(infra)
exe9(in)
exe9(integer)
exe9(intern)
exe9(ldexp)
exe9(leaf)
exe9(leql)
exe9(less)
exe9(linrec)
exe9(list)
exe9(localtime)
exe9(log10)
exe9(logical)
exe9(log)
exe9(map)
exe9(maxint)
exe9(max)
exe9(__memoryindex)
exe9(__memorymax)
exe9(min)
exe9(mktime)
exe9(modf)
exe9(mul)
exe9(name)
exe9(neg)
exe9(neql)
exe9(not)
exe9(nullary)
exe9(null)
exe9(of)
exe9(opcase)
exe9(ord)
exe9(or)
exe9(popd)
exe9(pop)
exe9(pow)
exe9(pred)
exe9(primrec)
exe9(putchars)
exe9(putch)
exe9(put)
exe9(quit)
exe9(rand)
exe9(rem)
exe9(rest)
exe9(rolldownd)
exe9(rolldown)
exe9(rollupd)
exe9(rollup)
exe9(rotated)
exe9(rotate)
exe9(round)
exe9(sametype)
exe9(setautoput)
exe9(setecho)
exe9(set)
exe9(setsize)
exe9(__settracegc)
exe9(setundeferror)
exe9(sign)
exe9(sinh)
exe9(sin)
exe9(size)
exe9(small)
exe9(some)
exe9(split)
exe9(sqrt)
exe9(srand)
exe9(stack)
exe9(stderr)
exe9(stdin)
exe9(stdout)
exe9(step)
exe9(stop)
exe9(strftime)
exe9(string)
exe9(strtod)
exe9(strtol)
exe9(sub)
exe9(succ)
exe9(swapd)
exe9(swap)
exe9(swons)
exe9(__symtabindex)
exe9(__symtabmax)
exe9(system)
exe9(tailrec)
exe9(take)
exe9(tanh)
exe9(tan)
exe9(ternary)
exe9(time)
exe9(times)
exe9(treegenrec)
exe9(treerec)
exe9(treestep)
exe9(true)
exe9(trunc)
exe9(typeof)
exe9(unary2)
exe9(unary3)
exe9(unary4)
exe9(unary)
exe9(uncons)
exe9(undeferror)
exe9(undefs)
exe9(unstack)
exe9(unswons)
exe9(user)
exe9(while)
exe9(x)
exe9(xor)

exe8(all2)
exe8(binary2)
exe8(binrec2)
exe8(branch2)
exe8(case2)
exe8(cleave2)
exe8(cond2)
exe8(condlinrec2)
exe8(condnestrec2)
exe8(construct)
exe8(construct2)
exe8(dip2)
exe8(filter2)
exe8(genrec2)
exe8(ifchar2)
exe8(iffile2)
exe8(iffloat2)
exe8(ifinteger2)
exe8(iflist2)
exe8(iflogical2)
exe8(ifset2)
exe8(ifstring2)
exe8(ifte2)
exe8(infra2)
exe8(linrec2)
exe8(map2)
exe8(primrec2)
exe8(some2)
exe8(split2)
exe8(step2)
exe8(tailrec2)
exe8(times2)
exe8(treegenrec2)
exe8(treerec2)
exe8(treestep2)
exe8(unary22)
exe8(unary32)
exe8(unary42)
exe8(while2)
